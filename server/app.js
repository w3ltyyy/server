const createServer = require('./api');
const { testConnection, initDatabase } = require('./database');
const path = require('path');
const fs = require('fs');

async function startServer() {
  try {
    console.log('----- –ó–∞–ø—É—Å–∫ –º—É–∑—ã–∫–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ -----');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–∞–Ω–Ω—ã—Ö
    const dataDir = path.join(__dirname, '../data');
    if (!fs.existsSync(dataDir)) {
      console.log('–°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –¥–∞–Ω–Ω—ã—Ö:', dataDir);
      fs.mkdirSync(dataDir, { recursive: true });
    }
    
    // Create and start server (–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î —Ç–µ–ø–µ—Ä—å –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ createServer)
    console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞...');
    const app = await createServer();
    const PORT = process.env.PORT || 3002;
    
    app.listen(PORT, () => {
      console.log(`\n‚úÖ –°–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!`);
      console.log(`üéµ –ú—É–∑—ã–∫–∞–ª—å–Ω—ã–π API –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:${PORT}/api`);
      console.log(`üîê –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: demo@example.com / password`);
      console.log(`üîê –ê–¥–º–∏–Ω: admin@example.com / admin123`);
      console.log(`üìÅ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: ${path.join(dataDir, 'chord.sqlite')}`);
      console.log(`\n–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞`);
    });
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error);
    process.exit(1);
  }
}

// Start the server
startServer(); 